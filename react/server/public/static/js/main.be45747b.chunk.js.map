{"version":3,"sources":["actions.js","components/Table.js","components/Dialog.js","components/Panel.js","libs/datalib.js","pages/Add.js","pages/Modify.js","pages/View.js","App.js","store/index.js","index.js"],"names":["SET_DATA","SET_DIALOG","Table","args","data","this","props","arr","key","push","btns","length","className","map","scope","item","ID","role","btn","index","type","onClick","callback","bind","classList","join","value","Component","connect","state","setDialog","showDialog","withRouter","Dialog","info","title","message","Panel","fields","formFields","forEach","field","name","e","target","setState","f","i","fieldName","readOnly","placeholder","onChange","reminder","getFormFields","SERVER","fix","result","success","error","alert","console","log","get","url","fetch","res","json","post","form","FormData","append","method","body","Add","id","refs","dialog","open","self","datalib","insertId","setData","history","Modify","match","params","filter","ite","parseInt","item_name","item_price","desc","newData","View","lib","linkTo","delId","NaN","show","path","component","to","App","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be45747b.chunk.js","sourcesContent":["export const SET_DATA = \"adsfadsfadf\"\r\nexport const SET_DIALOG = \"adsfasdfdsafdasf\"\r\n","import React,{Component} from 'react';\r\nimport './Table.css'\r\nimport {SET_DIALOG} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Table extends Component{\r\n  constructor(...args){\r\n    super(...args)\r\n  }\r\n  render(){\r\n\r\n    let data = this.props.data || []  //防止data为undefined导致报错导致\r\n    let arr = []\r\n    for(let key in data[0]){\r\n      arr.push(key)\r\n    }\r\n\r\n    let btns = this.props.btns || []\r\n\r\n    return (\r\n      <div>\r\n        {arr && arr.length !== 0 ?\r\n        <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            {arr.map(key => <th scope='col' key={key}>{key}</th>)}\r\n            <th scope=\"col\">操作</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((item) => {\r\n            return (\r\n              <tr key={item.ID}>\r\n                {arr.map(key => <td key={key}>{item[key]}</td>)}\r\n                <td>\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        {btns.map((btn,index) => \r\n                            <button\r\n                                type=\"button\"   \r\n                                key={index} \r\n                                onClick={btn.callback && btn.callback.bind(this,item)}  \r\n                                className={btn.classList ? btn.classList.join(\" \") : \"btn btn-primary\"}>\r\n                                {btn.value || 'submit'}\r\n                            </button>\r\n                        )}\r\n                     </div>\r\n                </td>\r\n                \r\n            </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n\r\n      </table>\r\n      : <div className=\"alert alert-secondary\" role=\"alert\">\r\n          No any data here, click add to append one.\r\n         </div> }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(function(state,props){\r\n  return {\r\n    ...state,\r\n    ...props\r\n  }\r\n},{\r\n  setDialog(showDialog){\r\n      return {\r\n          type:SET_DIALOG,\r\n          showDialog\r\n      }\r\n  }\r\n\r\n})(withRouter(Table))","import React,{Component} from 'react';\r\nimport {SET_DIALOG} from '../actions'\r\nimport './Dialog.css'\r\nimport {connect} from 'react-redux'\r\nclass Dialog extends Component{\r\n    constructor(...args){\r\n        super(...args)\r\n    }\r\n    render(){\r\n        let info = this.props.info || {}  //title, message, btns:classList,callback,value\r\n        return (\r\n            <div className=\"dialog\">\r\n                <div className=\"card\" >\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{info.title || \"\"}</h5>\r\n                        <p className=\"card-text\">{info.message}</p>\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            {info.btns.map((btn,index) => \r\n                                <button key={index}\r\n                                className={btn.classList ? btn.classList.join(\" \") : \"btn btn-primary\"} \r\n                                onClick={btn.callback && btn.callback.bind(this)}>{btn.value || \"确认\"}</button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(function(state,props){\r\n    return {\r\n      ...state,\r\n      ...props\r\n    }\r\n  },{\r\n    setDialog(showDialog){\r\n        return {\r\n            type:SET_DIALOG,\r\n            showDialog\r\n        }\r\n    }\r\n\r\n})(Dialog)","import React,{Component} from 'react';\r\nimport './Panel.css'\r\n\r\n\r\nclass Panel extends Component{\r\n    constructor(...args){\r\n        super(...args)\r\n        this.state = {\r\n            fields : this.props.fields || []\r\n        }\r\n    }\r\n    getFormFields(){\r\n        let fields = this.state.fields || [];\r\n        let formFields = {};\r\n        fields.forEach(field => {\r\n            let name = field.name;\r\n            let value = field.value;\r\n            if(name && name!==\"\"){\r\n               formFields[name] = value || \"\"\r\n            }\r\n        });\r\n        return formFields;\r\n    }\r\n    onChange(e,index){\r\n        let value = e.target.value\r\n        this.setState({\r\n            fields : this.state.fields.map((f,i) => i === index ? {...f , value} : f)\r\n        })\r\n    }\r\n    render(){\r\n        let fields = this.state.fields;\r\n        let btns = this.props.btns || [];\r\n        return (\r\n            <div className=\"panel\">\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <span className=\"navbar-brand\">{this.props.title||\"标题\"}</span>\r\n                </nav>\r\n                <form>\r\n                    {fields.map((field,index) => \r\n                        <div className=\"form-group\" key={index}>\r\n                            <label>{field.fieldName}</label>\r\n                            <input \r\n                                className=\"form-control\" \r\n                                name={field.name||\"\"}\r\n                                readOnly={field.readOnly?\"readOnly\":\"\"} \r\n                                placeholder={field.placeholder || ''}\r\n                                value={field.value || \"\"}\r\n                                onChange={function(e){ this.onChange(e,index) }.bind(this)}/>\r\n                            {field.reminder?<small className=\"form-text text-muted\">{field.reminder}</small>:''}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        {btns.map((btn,index) => \r\n                            <button\r\n                                type=\"button\"   \r\n                                key={index} \r\n                                onClick={btn.callback && btn.callback.bind(this,this.getFormFields())}  \r\n                                className={btn.classList ? btn.classList.join(\" \") : \"btn btn-primary\"}>\r\n                                {btn.value || 'submit'}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Panel","const SERVER = 'http://localhost:8080/'\r\nlet fix = (result,success,error) => {  //统一错误处理\r\n    try{\r\n        if(result.error){\r\n            let e = result.error\r\n            alert('错了')\r\n            console.log(e);\r\n            error && error(e)\r\n        } else{\r\n            success && success(result)  //数据请求成功，执行成功回调函数\r\n        }\r\n        return result;\r\n    } catch(e){\r\n        console.log(e);\r\n        alert('错了')\r\n        error && error(e)\r\n    }\r\n}\r\nexport default {\r\n    async get(url,success,error){\r\n        let res = await fetch(SERVER + url)\r\n        let result = await res.json()\r\n        return fix(result,success,error)\r\n    },\r\n    async post(url,data,success,error){\r\n        let form = new FormData();\r\n        for(let field in data){\r\n            form.append(field,data[field])\r\n        }\r\n        let res = await fetch(SERVER + url, {\r\n            method:\"post\",\r\n            body:form\r\n        })\r\n        let result = await res.json()\r\n        return fix(result,success,error)\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport Panel from '../components/Panel'\r\nimport {withRouter} from 'react-router-dom'  //用来包装暴露出去的组件\r\nimport datalib from '../libs/datalib'\r\nimport {SET_DATA} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport \"./Add.css\"\r\n\r\nclass Add extends Component{\r\n  constructor(...args){\r\n    super(...args)\r\n  }\r\n  async del(id){\r\n    console.log(id);\r\n    this.refs.dialog.open();\r\n  }\r\n  render(){\r\n    let self = this  //防止回调函数中的this乱变\r\n    let fields = [\r\n      {\r\n          fieldName:\"商品名称\",\r\n          placeholder:\"请输入商品名称\",\r\n          name:\"item_name\",\r\n      },\r\n      {\r\n          fieldName:\"商品价格\",\r\n          name:\"item_price\",\r\n          placeholder:\"请输入商品价格\",\r\n      },\r\n      {\r\n          fieldName:\"描述\",\r\n          name:\"desc\",\r\n          reminder:\"描述为选填项\",\r\n          placeholder:\"请输入商品描述\",\r\n      }\r\n    ]\r\n    let btns = [\r\n        {\r\n            value:\"添加\",\r\n            classList:[\"btn\",\"btn-primary\"],\r\n            callback(fields){\r\n              datalib.post('item/add',fields,function(res){\r\n                fields.ID = res.insertId;\r\n                let data = self.props.data;\r\n                data.push(fields)\r\n                self.props.setData(data)\r\n                self.props.history.push('/')\r\n                alert('添加成功')\r\n              })\r\n            }\r\n        },\r\n        {\r\n            value:\"取消\",\r\n            classList:[\"btn\",\"btn-secondary\"],\r\n            callback:function(){\r\n                self.props.history.push('/')\r\n            }\r\n        }\r\n    ]\r\n    return (\r\n      <div className=\"wrapper-page\">\r\n          <div className=\"panelDiv\">\r\n              <Panel title=\"添加商品\" fields={fields} btns={btns}></Panel>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(function(state,props){\r\n    return {\r\n      ...state,\r\n      ...props\r\n    }\r\n  },{\r\n    setData(data){\r\n        return {\r\n            type:SET_DATA,\r\n            data\r\n        }\r\n    },\r\n  })(withRouter(Add))\r\n","import React,{Component} from 'react';\r\nimport Panel from '../components/Panel'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'  //用来包装暴露出去的组件\r\nimport datalib from '../libs/datalib'\r\nimport {SET_DATA} from '../actions'\r\nimport \"./Add.css\"\r\n\r\nclass Modify extends Component{\r\n  constructor(...args){\r\n    super(...args)\r\n    this.state = {\r\n        \r\n    }\r\n  }\r\n  render(){\r\n    let self = this  //防止回调函数中的this乱变\r\n    let id = this.props.match.params.id;  //注意，这里的id是string类型\r\n    let data = this.props.data || []\r\n    let item = data.filter(ite => ite.ID === parseInt(id))[0] || {}\r\n    let fields = [\r\n        {\r\n            fieldName: \"商品编号\",\r\n            name:\"ID\",\r\n            value:item.ID,\r\n            placeholder:item.ID,\r\n            readOnly: true\r\n        },\r\n        {\r\n            fieldName:\"商品名称\",\r\n            placeholder:\"请输入商品名称\",\r\n            name:\"item_name\",\r\n            value : item.item_name\r\n        },\r\n        {\r\n            fieldName:\"商品价格\",\r\n            name:\"item_price\",\r\n            placeholder:\"请输入商品价格\",\r\n            value : item.item_price\r\n        },\r\n        {\r\n            fieldName:\"描述\",\r\n            name:\"desc\",\r\n            reminder:\"描述为选填项\",\r\n            placeholder:\"请输入商品描述\",\r\n            value : item.desc\r\n        }\r\n    ]\r\n    let btns = [\r\n        {\r\n            value:\"确认修改\",\r\n            classList:[\"btn\",\"btn-primary\"],\r\n            callback(fields){\r\n                datalib.post('item/modify',fields,function(res){\r\n                    let newData = data.map(item => item.ID === fields.ID ? fields : item)\r\n                    alert('修改成功')\r\n                    self.props.setData(newData)\r\n                    self.props.history.push('/')\r\n                    console.log(res);\r\n                })\r\n            }\r\n        },\r\n        {\r\n            value:\"取消\",\r\n            classList:[\"btn\",\"btn-secondary\"],\r\n            callback:function(){\r\n                self.props.history.push('/')\r\n            }\r\n        }\r\n    ]\r\n    \r\n    return (\r\n      <div className=\"wrapper-page\">\r\n          <div className=\"panelDiv\">\r\n              <Panel title=\"修改商品\" fields={fields} btns={btns} key={item.ID}></Panel>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(function(state,props){\r\n    return {\r\n      ...state,\r\n      ...props\r\n    }\r\n  },{\r\n    setData(data){\r\n        return {\r\n            type:SET_DATA,\r\n            data\r\n        }\r\n    },\r\n  })(withRouter(Modify))\r\n","import React,{Component} from 'react';\r\nimport {BrowserRouter as Router,Link,Route,withRouter} from 'react-router-dom'\r\nimport Table from '../components/Table';\r\nimport Dialog from '../components/Dialog'\r\nimport Add from './Add'\r\nimport {connect} from 'react-redux'\r\nimport {SET_DATA,SET_DIALOG} from '../actions'\r\nimport lib from '../libs/datalib'\r\nimport Modify from './Modify';\r\n\r\n\r\nclass View extends Component{\r\n  constructor(...args){\r\n    super(...args)\r\n  }\r\n  async componentDidMount(){\r\n    let result = await lib.get('item/getItems')\r\n    if(result.error){\r\n    } else{\r\n        this.props.setData(result.data)\r\n    }\r\n  }\r\n  render(){\r\n    let self = this\r\n    let data = this.props.data || []\r\n    let btns = [\r\n        {\r\n            value:\"修改\",\r\n            classList:[\"btn\",\"btn-primary\"],\r\n            linkTo:\"modify\",\r\n            callback(item){\r\n                this.props.history.push(\"/modify/\" + item.ID)\r\n            }\r\n        },\r\n        {\r\n            value:\"删除\",\r\n            classList : [\"btn\",\"btn-danger\"],\r\n            callback(item){\r\n                self.delId = item.ID\r\n                this.props.setDialog(true)\r\n            }\r\n        }\r\n    ]\r\n\r\n\r\n    let info = {//title, message, btns:classList,callback,value\r\n        title:'提示',\r\n        message:'确认删除？',\r\n        btns:[\r\n            {\r\n                value:\"确认\",\r\n                classList:[\"btn\",\"btn-primary\"],\r\n                callback(){\r\n                    if(self.delId) lib.get('item/del/'+self.delId,function(){\r\n                        alert('删除成功')\r\n                        self.props.setDialog(false)\r\n                        self.props.setData(data.filter(item => item.ID != self.delId))\r\n                        self.delId = NaN\r\n                    })\r\n                }\r\n            },\r\n            {\r\n                value:\"取消\",\r\n                classList:[\"btn\",\"btn-secondary\"],\r\n                callback(){\r\n                    self.props.setDialog(false)\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    let show = this.props.showDialog\r\n    return (\r\n        <Router>\r\n            <Route path=\"/add\" component={Add}></Route>\r\n            {/* <Route path=\"/modify\" component={Modify}></Route> */}\r\n            <Route path=\"/modify/:id\" component={Modify}></Route>\r\n            <Link className=\"btn btn-primary\" to=\"/add\">添加商品</Link>\r\n            <Table data={data} btns={btns}></Table>\r\n            {show?<Dialog info={info}></Dialog>:\"\"}\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(function(state,props){\r\n    return {\r\n      ...state,\r\n      ...props\r\n    }\r\n  },{\r\n    setData(data){\r\n      return {\r\n        type:SET_DATA,\r\n        data\r\n      }\r\n    },\r\n    setDialog(showDialog){\r\n        return {\r\n            type:SET_DIALOG,\r\n            showDialog\r\n        }\r\n    }\r\n\r\n})(withRouter(View))","import React,{Component} from 'react';\nimport View from \"./pages/View\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nclass App extends Component{\n  constructor(...args){\n    super(...args)\n  }\n  render(){\n    return (\n      <Router>\n        <View></View>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import {SET_DATA,SET_DIALOG} from '../actions'\r\nimport {createStore} from 'redux'\r\nlet reducer = function(state = {},action){\r\n    switch(action.type){\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                data : action.data\r\n            }\r\n        case SET_DIALOG:\r\n            return {\r\n                ...state,\r\n                showDialog:action.showDialog\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nlet store = createStore(reducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport './assert/bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}